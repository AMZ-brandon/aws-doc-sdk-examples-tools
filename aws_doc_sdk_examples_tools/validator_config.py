# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: Apache-2.0

from pathlib import Path
from typing import Set
from urllib.request import urlopen
import json

# Only files with these extensions are scanned.
EXT_LOOKUP = {
    ".abap": "SAP ABAP",
    ".c": "C",
    ".cmd": "AWS-CLI",
    ".cpp": "C++",
    ".cs": "C#",
    ".css": "CSS",
    ".go": "Go",
    ".html": "JavaScript",
    ".java": "Java",
    ".js": "JavaScript",
    ".json": "JSON",
    ".jsx": "JavaScript",
    ".kt": "Kotlin",
    ".md": "Markdown",
    ".mjs": "JavaScript",
    ".mts": "TypeScript",
    ".php": "PHP",
    ".py": "Python",
    ".rb": "Ruby",
    ".rs": "Rust",
    ".sh": "AWS-CLI",
    ".swift": "Swift",
    ".toml": "Toml",
    ".ts": "TypeScript",
    ".tsx": "TypeScript",
    ".txt": "CMake",
    ".yaml": "YAML",
    ".yml": "YAML",
}


def skip(path: Path) -> bool:
    return path.suffix.lower() not in EXT_LOOKUP or path.name in IGNORE_FILES


# If you get a lot of false-flagged 40-character errors
# in specific folders or files, you can omit them from
# these scans by adding them to the following lists.
# However, because this script is mostly run as a GitHub
# action in a clean environment (aside from testing),
# exhaustive ignore lists shouldn"t be necessary.

# Files to skip.
IGNORE_FILES = {
    ".moviedata.json",
    ".travis.yml",
    "AssemblyInfo.cs",
    "moviedata.json",
    "movies.json",
    "movies_5.json",
    "package-lock.json",
}

IGNORE_SPDX_SUFFIXES = {
    ".csv",
    ".html",
    ".json",
    ".md",
    ".txt",
    ".yaml",
    ".yml",
}

SPDX_LEADER = r"^(#|//|\") "
SPDX_COPYRIGHT = r"Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved."
SPDX_LICENSE = r"SPDX-License-Identifier: (Apache-2.0|MIT-0)"

GOOD_WORDS = {
    "crash",
    "dp",
    "dummy",
    "massa",
    "jerry",
    "throat",
}

words: Set[str] = set()
try:
    DATA = urlopen(
        "https://raw.githubusercontent.com/zacanger/profane-words/5ad6c62fa5228293bc610602eae475d50036dac2/words.json"
    )
    words = set(json.load(DATA)).difference(GOOD_WORDS)
except:  # noqa: E722
    pass

WORDS = words

# List of words that should never be in code examples.
DENY_LIST = {"alpha-docs-aws.amazon.com", "integ-docs-aws.amazon.com"}.union(WORDS)

# Allowlist of 20- or 40-character strings to allow.
ALLOW_LIST = {
    "AAAAEAAAAAAAAAA2QJKN",
    "AGPAIFFQAVRFFEXAMPLE",
    "AIDA123456789EXAMPLE",
    "AIDAIOSFODNN7EXAMPLE",
    "AKGPT4J56IAJ2EUBL5CQ",
    "AKIA111111111EXAMPLE",
    "AKIA32P3D2JDNMVAJLGF",
    "AKIA6OHTTRXXTEXAMPLE",
    "AKIAEXAMPLE123456789",
    "AKIAEXAMPLEACCESSKEY",
    "AKIAEXAMPLEPBUMBC3GA",
    "AKIAI44QH8DHBEXAMPLE",
    "AKIAIESZCNJ3OEXAMPLE",
    "AKIAIOSFODNN7EXAMPLE",
    "AKIAJ5C56P35AEBRX2QQ",
    "APKA123456789EXAMPLE",
    "APKAEIBAERJR2EXAMPLE",
    "AROA123456789EXAMPLE",
    "ASIAIOSFODNN7EXAMPLE",
    "ASIASZ4SI7REEEXAMPLE",
    "/011685312445/vaults/mwunderl/jobs/l7IL5",
    "/AmazonEventBridgeServiceIntegrationTest",
    "/ListOrganizationalUnitsForParentExample",
    "/applications/03axw94pjfj3uan00tcgbrxnkw",
    "/applications/055gw7aynr1i5mbv7kjwzx5945",
    "/applications/0ars38r6btoohvpvd9gqrptt9l",
    "000q6TfUovXsEMmgKowxDZLlwqr2QUshd2e75c8c",
    "06ab6d6e13564b5733d75abaf3b599f93cf39a23",
    "0a6546f68309560d08a310daac92314c4d378f6b",
    "1111111ad99dcd35914c00b7fbea13995EXAMPLE",
    "123456abcdeb0e11022f22a11EXAMPLE/output/",
    "12345abcdefghijk67890lmnopqrst98765uvwxy",
    "12345abcdefghijk67890lmnopqrst987example",
    "12e593b60c42352d1942a2fa31122747650dd8f8",
    "1NbjQzMReAkeEQPNAW8r3dXsU2rDD7fc7f2Sipnu",
    "2eb4af3b1thisisanexamplethisisanexample1",
    "2wztk5hvpUM2SesXgrzbehG5hViyktrfANpAD0NO",
    "34478a908a83ae45dcb61676d235ece975c62c63",
    "3EXAMPLEa995d8c3b06b4501356e5f2f28e1aeba",
    "3EXAMPLEa995d8c3b06b4501356e5f2fEXAMPLEa",
    "3EXAMPLEb4fffb5cec056220c734713e14bd5fcd",
    "3EXAMPLEb4fffb5cec056220c734713eEXAMPLEd",
    "3a9e11cb419e8fff14b03883dc4e64f6155aaa7e",
    "4a990a2f7e82adfca6e171135EXAMPLE/output/",
    "6f9db0c42d0c810e814670ee4EXAMPLE/output/",
    "7359755EXAMPLEabc3060bce3EXAMPLEec4542a3",
    "7aa87a031thisisanexamplethisisanexample1",
    "7e9fd3091thisisanexamplethisisanexample1",
    "7qu4hk5bqhda3i7i2n4pjf98qcuh8b7p45ifsmo0",
    "8EXAMPLE2ba7ad041451946fafc2ad19cfbd9eb2",
    "8bklk8bl1k3sB38D9B3l0enyWT8c09B30lkq0blk",
    "9EXAMPLE14b000d34c8d1c432734e137612d5b5c",
    "9EXAMPLE8ad863723b62cc8901a8aa6e794ae0d2",
    "9EXAMPLE8ad863723b62ccEXAMPLEa6e794ae0d2",
    "AWSEC2/latest/APIReference/OperationList",
    "AWSManagedDomainsBotnetCommandandControl",
    "AllocatedProvisionedConcurrentExecutions",
    "AppStreamUsageReportsCFNGlueAthenaAccess",
    "AssociateSigninDelegateGroupsWithAccount",
    "AvailableProvisionedConcurrentExecutions",
    "BatchAssociateClientDeviceWithCoreDevice",
    "CancelExportTaskExample/CancelExportTask",
    "CertificateAuthorityExpiryInMilliseconds",
    "CertificateTransparencyLoggingPreference",
    "ChangeMessageVisibilityBatchRequestEntry",
    "CreateCollectionExample/CreateCollection",
    "CreateExportTaskExample/CreateExportTask",
    "DeleteCollectionExample/DeleteCollection",
    "DeleteNetworkInsightsAccessScopeAnalysis",
    "DeleteVpcEndpointConnectionNotifications",
    "DescribeAggregateComplianceByConfigRules",
    "DescribeDbClusterParameterGroupsResponse",
    "DescribeDirectConnectGatewayAssociations",
    "DescribeEffectivePatchesForPatchBaseline",
    "DescribeInstancePatchStatesForPatchGroup",
    "DescribeOrderableDBInstanceOptionsOutput",
    "DescribeReplicationTaskAssessmentResults",
    "DescribeTransitGatewayPeeringAttachments",
    "DescribeVpcEndpointServiceConfigurations",
    "DisassociateAwsAccountFromPartnerAccount",
    "DynamodbRubyExampleCreateUsersTableStack",
    "EXAMPLEad99dcd35914c00b7fbea139951111111",
    "GetBucketIntelligentTieringConfiguration",
    "GetIdentityVerificationAttributesRequest",
    "GetInstanceTypesFromInstanceRequirements",
    "InstanceAssociationStatusAggregatedCount",
    "InstancesWithCriticalNonCompliantPatches",
    "InstancesWithSecurityNonCompliantPatches",
    "KMSWithContextEncryptionMaterialsExample",
    "KinesisStreamSourceConfiguration=kinesis",
    "ListOrganizationalUnitsForParentResponse",
    "ListTagsExample/ListTagsExample/ListTags",
    "ListTagsForVaultExample/ListTagsForVault",
    "ListVoiceConnectorTerminationCredentials",
    "ModifyReplicationGroupShardConfiguration",
    "ModifyTrafficMirrorFilterNetworkServices",
    "NYiytVbZPQUQ5Yaxu2jXnimvw3rrszlaEXAMPLE=",
    "PutBucketIntelligentTieringConfiguration",
    "RequestedProvisionedConcurrentExecutions",
    "SynthesizeSpeechExample/SynthesizeSpeech",
    "TargetTrackingScalingPolicyConfiguration",
    "TerminateInstanceInAutoScalingGroupAsync",
    "UnsuccessfulInstanceCreditSpecifications",
    "UpdateCustomRoutingAcceleratorAttributes",
    "VectorEnrichmentJobDataSourceConfigInput",
    "Z8V6NH4yERHzars8wTKYQMX6nBDI9cMNHzyZJO59",
    "aa9593f9203e84f3ef032ce18EXAMPLE/output/",
    "aef7744ed069c51098e15c360f4102cd2cd1ad64",
    "amazondynamodb/latest/developerguide/DAX",
    "apigateway/latest/developerguide/welcome",
    "aws/acm/model/DescribeCertificateRequest",
    "aws/cloudtrail/model/LookupEventsRequest",
    "aws/codebuild/model/BatchGetBuildsResult",
    "aws/codecommit/model/DeleteBranchRequest",
    "aws/codecommit/model/ListBranchesRequest",
    "aws/dynamodb/model/BatchWriteItemRequest",
    "aws/dynamodb/model/ProvisionedThroughput",
    "aws/ec2/model/CreateSecurityGroupRequest",
    "aws/ec2/model/DeleteSecurityGroupRequest",
    "aws/ec2/model/UnmonitorInstancesResponse",
    "aws/email/model/CreateReceiptRuleRequest",
    "aws/email/model/DeleteReceiptRuleRequest",
    "aws/email/model/ListReceiptFiltersResult",
    "aws/email/model/SendTemplatedEmailResult",
    "aws/guardduty/model/ListDetectorsRequest",
    "aws/iam/model/GetAccessKeyLastUsedResult",
    "aws/iam/model/GetServerCertificateResult",
    "aws/kinesis/model/GetShardIteratorResult",
    "aws/kinesis/model/PutRecordsRequestEntry",
    "aws/kms/model/ScheduleKeyDeletionRequest",
    "aws/monitoring/model/DeleteAlarmsRequest",
    "aws/neptune/model/CreateDBClusterRequest",
    "aws/neptune/model/DeleteDBClusterRequest",
    "aws/neptune/model/ModifyDBClusterRequest",
    "aws/rds/model/DescribeDBInstancesRequest",
    "aws/rds/model/DescribeDBSnapshotsRequest",
    "b44a9b6297bcb698f1c51a3545a2b3b368d59c52",
    "bf7fcf281thisisanexamplethisisanexample1",
    "c2VhcmNoQWxsVGFnc0luVGFibGVzIjpmYWxzZX0=",
    "c3768084dfb3d2b68b7897bf5f565da8eEXAMPLE",
    "cd5e746ec203c8c3c61647e0886a8df8c1e78e41",
    "cloudsearch/latest/developerguide/search",
    "cloudwatch/commands/PutMetricDataCommand",
    "cluster/c524291ae4154100b601a543108b193a",
    "code/codepipeline/MyCodePipelineFunction",
    "codeartifact/latest/APIReference/Welcome",
    "codepipeline/latest/APIReference/Welcome",
    "com/AWSEC2/latest/UserGuide/EBSSnapshots",
    "com/AWSEC2/latest/UserGuide/instancedata",
    "com/AWSJavaScriptSDK/v3/latest/client/s3",
    "com/AmazonCloudWatch/latest/logs/Working",
    "com/AmazonECS/latest/developerguide/task",
    "com/AmazonRDS/latest/AuroraUserGuide/rds",
    "com/AmazonS3/latest/API/RESTBucketPUTacl",
    "com/AmazonS3/latest/userguide/ServerLogs",
    "com/AmazonServiceRoleForLexBots/1a2b3c4d",
    "com/Route53/latest/DeveloperGuide/domain",
    "com/amazondynamodb/latest/developerguide",
    "com/apigateway/latest/developerguide/api",
    "com/apigateway/latest/developerguide/how",
    "com/apigateway/latest/developerguide/set",
    "com/appconfig/latest/userguide/appconfig",
    "com/autoscaling/ec2/APIReference/Welcome",
    "com/awssupport/latest/APIReference/index",
    "com/directconnect/latest/UserGuide/multi",
    "com/documentdb/latest/developerguide/API",
    "com/firehose/latest/APIReference/Welcome",
    "com/greengrass/latest/developerguide/lra",
    "com/greengrass/latest/developerguide/sns",
    "com/healthimaging/latest/devguide/create",
    "com/healthimaging/latest/devguide/delete",
    "com/healthimaging/latest/devguide/search",
    "com/healthimaging/latest/devguide/update",
    "com/inspector/latest/userguide/inspector",
    "com/iot/latest/developerguide/mitigation",
    "com/iotanalytics/latest/APIReference/API",
    "com/kms/latest/developerguide/disconnect",
    "com/kotlin/api/latest/mediaconvert/index",
    "com/mediatailor/latest/ug/configurations",
    "com/pinpoint/latest/apireference/welcome",
    "com/redshift/latest/APIReference/Welcome",
    "com/rekognition/latest/dg/considerations",
    "com/samples/JobStatusNotificationsSample",
    "com/secretsmanager/latest/userguide/auth",
    "com/securityhub/latest/userguide/finding",
    "com/servicecatalog/latest/arguide/access",
    "com/servicecatalog/latest/arguide/create",
    "com/servicecatalog/latest/arguide/delete",
    "com/servicecatalog/latest/arguide/manage",
    "com/transcribe/latest/APIReference/index",
    "com/v1/documentation/api/latest/guide/s3",
    "com/workdocs/latest/APIReference/Welcome",
    "com/workspaces/latest/adminguide/migrate",
    "com/workspaces/latest/adminguide/rebuild",
    "com/workspaces/latest/adminguide/restore",
    "com/workspaces/latest/adminguide/running",
    "cryptography/latest/APIReference/Welcome",
    "d187537d15254312a9609aa51bbf7624u7W49tPO",
    "d927562638cfa739331a99b3cEXAMPLE/output/",
    "datapipeline/latest/APIReference/Welcome",
    "devicefarm/latest/developerguide/welcome",
    "directConnectGatewayAssociationProposals",
    "entity/schemaVersion=1/20230616T200543Z/",
    "examples/blob/main/applications/feedback",
    "exclusiveResourceSecurityGroupManagement",
    "f2194c1757bbdcb0f8f229254a4b3c8b27d43e0b",
    "fa85936EXAMPLEa31736c051f10d77297EXAMPLE",
    "generate_presigned_url_and_upload_object",
    "iam/commands/GetAccessKeyLastUsedCommand",
    "iam/commands/GetServerCertificateCommand",
    "imagebuilder/latest/APIReference/Welcome",
    "imaging/model/GetImageSetMetadataRequest",
    "imaging/model/StartDICOMImportJobRequest",
    "iotanalytics/latest/APIReference/Welcome",
    "itnuqhai5alf1n6ahv3udc05n7hhddr6gb3lq6g0",
    "je7MtGbClwBF/2Zp9Utk/h3yCo8nvbEXAMPLEKEY",
    "mediaconnect/latest/APIReference/Welcome",
    "nFindProductsWithNegativePriceWithConfig",
    "nodegroup/PROD/ProdEKSNodeGroup/7eb79e47",
    "npzbgTevuufCTbjeBAaDARg9cbTK1rJbg3awM33o",
    "preview/examples/cognitoidentityprovider",
    "preview/examples/lambda/src/bin/scenario",
    "respondToDevicePasswordVerifierChallenge",
    "role/AmazonBedrockExecutionRoleForAgents",
    "role/AmazonSageMakerGeospatialFullAccess",
    "s3_client_side_encryption_sym_master_key",
    "sNvjQDMReA1eEQPNAW8r37XsU2rDD7fc7m2SiMnu",
    "sNvjQDMReA1vEQPNzW8r3dXsU2rrD7fcjm2SiMnu",
    "serial/CORE_THING_NAME/write/dev/serial1",
    "service/FeedbackSentimentAnalyzer/README",
    "ses/commands/CreateReceiptRuleSetCommand",
    "ses/commands/DeleteReceiptRuleSetCommand",
    "ses/commands/VerifyDomainIdentityCommand",
    "src/main/java/com/aws/jdbc/RetrieveItems",
    "src/main/java/com/etl/example/Population",
    "src/main/java/com/example/RDSGetStudents",
    "src/main/java/com/example/commit/PutFile",
    "src/main/java/com/example/dynamodb/Query",
    "src/main/java/com/example/glue/GetJobRun",
    "src/main/java/com/example/glue/HelloGlue",
    "src/main/java/com/example/iam/CreateRole",
    "src/main/java/com/example/iam/CreateUser",
    "src/main/java/com/example/iam/DeleteUser",
    "src/main/java/com/example/iam/UpdateUser",
    "src/main/java/com/example/kms/ListGrants",
    "src/main/java/com/example/photo/WorkItem",
    "src/main/java/com/example/ppe/PPEHandler",
    "src/main/java/com/example/s3/ListBuckets",
    "src/main/java/com/example/s3/ListObjects",
    "src/main/java/com/example/s3/S3BucketOps",
    "src/main/java/com/example/sns/ListOptOut",
    "src/main/java/com/example/sns/ListTopics",
    "src/main/java/com/example/sqs/SQSExample",
    "src/main/java/com/example/ssm/GetOpsItem",
    "src/main/java/com/example/sts/AssumeRole",
    "src/main/java/com/example/tags/S3Service",
    "src/main/kotlin/com/kotlin/iam/GetPolicy",
    "src/main/kotlin/com/kotlin/iam/ListUsers",
    "src/main/kotlin/com/kotlin/s3/CopyObject",
    "src/test/java/example/firehose/PutRecord",
    "targetTrackingScalingPolicyConfiguration",
    "upload_files_using_managed_file_uploader",
    "videoMetaData=celebrityRecognitionResult",
    "wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY",
    "https://docs.aws.amazon.com/ivs/latest/userguide//private-channels.html",
    "s3/src/main/java/com/example/s3/ParseUri",
}


# Sample files.
EXPECTED_SAMPLE_FILES = {
    "README.md",
    "chat_sfn_state_machine.json",
    "market_2.jpg",
    "movies.json",
    "sample_saml_metadata.xml",
    "speech_sample.mp3",
    "spheres_2.jpg",
}

# Media file types.
MEDIA_FILE_TYPES = {"mp3", "wav", "jpg", "jpeg", "png"}
